stages:
  - package
  - build
  - deploy
variables:
  
  HARBOR_HOST: harbor.dev.cbishi.com
  CONTAINER_GROUP: pims
  CONTAINER_NAME: frontend_pims_user_portal
  CONTAINER_IMAGE: ${HARBOR_HOST}/${CONTAINER_GROUP}/${CONTAINER_NAME}:${CI_COMMIT_SHORT_SHA}

package:
  image: "node:12.13.1-stretch-slim"
  stage: package
  tags:
    - gitlab-devops
  artifacts:
    name: "dist"
    untracked: false
    expire_in: 60 mins
    paths:
      - $CI_PROJECT_DIR/dist

  script:
    - npm config set registry https://registry.npm.taobao.org
    - npm install
    - cp ./cpexcel.js ./node_modules/xlsx-style/dist/cpexcel.js
    - npm run build:prod
  cache:
    key: ${CI_PROJECT_NAME}
    paths:
      - node_modules/
  only:
    - master


build:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--insecure-registry","harbor.dev.cbishi.com"]
  tags:
    - gitlab-devops
  script:
    - docker login -u "${HARBOR_USER}" -p "${HARBOR_PASSWORD}" ${HARBOR_HOST}
    - docker build -t ${CONTAINER_IMAGE} -f Dockerfile.test .
    - docker tag ${CONTAINER_IMAGE} ${CONTAINER_IMAGE}
    - docker tag ${CONTAINER_IMAGE} ${HARBOR_HOST}/${CONTAINER_GROUP}/${CONTAINER_NAME}:latest
    - docker push ${CONTAINER_IMAGE}
    - docker push ${HARBOR_HOST}/${CONTAINER_GROUP}/${CONTAINER_NAME}:latest
  only:
    - master

deploy:
  stage: deploy
  tags:
    - gitlab-devops
  image: dtzar/helm-kubectl
  script:
    - kubectl config set-cluster k8s --server="${K8S_SERVER}"
    - kubectl config set clusters.k8s.certificate-authority-data "${K8S_CERTIFICATE_AUTHORITY_DATA}"
    - kubectl config set-credentials gitlab --token="${K8S_USER_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" deployment.yml
    - kubectl apply -f deployment.yml
    - |
      if kubectl patch -f deployment.yml -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"ci-last-updated\":\"$(date +'%s')\"}}}}}" | grep -q Error; then
        echo "=> Deployment apply has changed the object, no need to force image update."
        kubectl apply -f deployment.yml
      else
        echo "=> Patching deployment to force image update."
      fi
  only:
    - master
